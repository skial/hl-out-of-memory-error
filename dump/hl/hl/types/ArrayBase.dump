@:directlyUsed @:used @:keep
class hl.types.ArrayBase extends hl.types.ArrayAccess {

	public var length(default,null):Int;

	public function pushDyn[Function:(v : Dynamic) -> Int]
		[Arg:Dynamic] [Local v(870):Dynamic]
		[Block:Unknown<28>]
			[Throw:Unknown<28>]
				[Call:Any]
					[Field:(value : Any) -> Any]
						[TypeExpr haxe.Exception:{ Statics haxe.Exception }]
						[FStatic:(value : Any) -> Any]
							haxe.Exception
							thrown:(value : Any) -> Any
					[Const:String] "Not implemented"

	public function popDyn[Function:() -> Null<Dynamic>]
		[Block:Unknown<29>]
			[Throw:Unknown<29>]
				[Call:Any]
					[Field:(value : Any) -> Any]
						[TypeExpr haxe.Exception:{ Statics haxe.Exception }]
						[FStatic:(value : Any) -> Any]
							haxe.Exception
							thrown:(value : Any) -> Any
					[Const:String] "Not implemented"

	public function shiftDyn[Function:() -> Null<Dynamic>]
		[Block:Unknown<30>]
			[Throw:Unknown<30>]
				[Call:Any]
					[Field:(value : Any) -> Any]
						[TypeExpr haxe.Exception:{ Statics haxe.Exception }]
						[FStatic:(value : Any) -> Any]
							haxe.Exception
							thrown:(value : Any) -> Any
					[Const:String] "Not implemented"

	public function unshiftDyn[Function:(v : Dynamic) -> Void]
		[Arg:Dynamic] [Local v(872):Dynamic]
		[Block:Unknown<31>]
			[Throw:Unknown<31>]
				[Call:Any]
					[Field:(value : Any) -> Any]
						[TypeExpr haxe.Exception:{ Statics haxe.Exception }]
						[FStatic:(value : Any) -> Any]
							haxe.Exception
							thrown:(value : Any) -> Any
					[Const:String] "Not implemented"

	public function insertDyn[Function:(pos : Int, v : Dynamic) -> Void]
		[Arg:Int] [Local pos(875):Int]
		[Arg:Dynamic] [Local v(876):Dynamic]
		[Block:Unknown<32>]
			[Throw:Unknown<32>]
				[Call:Any]
					[Field:(value : Any) -> Any]
						[TypeExpr haxe.Exception:{ Statics haxe.Exception }]
						[FStatic:(value : Any) -> Any]
							haxe.Exception
							thrown:(value : Any) -> Any
					[Const:String] "Not implemented"

	public function containsDyn[Function:(v : Dynamic) -> Bool]
		[Arg:Dynamic] [Local v(878):Dynamic]
		[Block:Unknown<33>]
			[Throw:Unknown<33>]
				[Call:Any]
					[Field:(value : Any) -> Any]
						[TypeExpr haxe.Exception:{ Statics haxe.Exception }]
						[FStatic:(value : Any) -> Any]
							haxe.Exception
							thrown:(value : Any) -> Any
					[Const:String] "Not implemented"

	public function removeDyn[Function:(v : Dynamic) -> Bool]
		[Arg:Dynamic] [Local v(880):Dynamic]
		[Block:Unknown<34>]
			[Throw:Unknown<34>]
				[Call:Any]
					[Field:(value : Any) -> Any]
						[TypeExpr haxe.Exception:{ Statics haxe.Exception }]
						[FStatic:(value : Any) -> Any]
							haxe.Exception
							thrown:(value : Any) -> Any
					[Const:String] "Not implemented"

	public function sortDyn[Function:(f : ((Dynamic, Dynamic) -> Int)) -> Void]
		[Arg:(Dynamic, Dynamic) -> Int] [Local f(882):(Dynamic, Dynamic) -> Int]
		[Block:Unknown<35>]
			[Throw:Unknown<35>]
				[Call:Any]
					[Field:(value : Any) -> Any]
						[TypeExpr haxe.Exception:{ Statics haxe.Exception }]
						[FStatic:(value : Any) -> Any]
							haxe.Exception
							thrown:(value : Any) -> Any
					[Const:String] "Not implemented"

	public function slice[Function:(pos : Int, ?end : Null<Int>) -> hl.types.ArrayBase]
		[Arg:Int] [Local pos(607):Int]
		[Arg:Null<Int>]
			[Local end(608):Null<Int>]
			[Const:Null<Int>] null
		[Block:Unknown<36>]
			[Throw:Unknown<36>]
				[Call:Any]
					[Field:(value : Any) -> Any]
						[TypeExpr haxe.Exception:{ Statics haxe.Exception }]
						[FStatic:(value : Any) -> Any]
							haxe.Exception
							thrown:(value : Any) -> Any
					[Const:String] "Not implemented"

	public function splice[Function:(pos : Int, len : Int) -> hl.types.ArrayBase]
		[Arg:Int] [Local pos(713):Int]
		[Arg:Int] [Local len(714):Int]
		[Block:Unknown<37>]
			[Throw:Unknown<37>]
				[Call:Any]
					[Field:(value : Any) -> Any]
						[TypeExpr haxe.Exception:{ Statics haxe.Exception }]
						[FStatic:(value : Any) -> Any]
							haxe.Exception
							thrown:(value : Any) -> Any
					[Const:String] "Not implemented"

	public function join[Function:(sep : String) -> String]
		[Arg:String] [Local sep(521):String]
		[Block:Unknown<38>]
			[Throw:Unknown<38>]
				[Call:Any]
					[Field:(value : Any) -> Any]
						[TypeExpr haxe.Exception:{ Statics haxe.Exception }]
						[FStatic:(value : Any) -> Any]
							haxe.Exception
							thrown:(value : Any) -> Any
					[Const:String] "Not implemented"

	public function reverse[Function:() -> Void]
		[Block:Unknown<39>]
			[Throw:Unknown<39>]
				[Call:Any]
					[Field:(value : Any) -> Any]
						[TypeExpr haxe.Exception:{ Statics haxe.Exception }]
						[FStatic:(value : Any) -> Any]
							haxe.Exception
							thrown:(value : Any) -> Any
					[Const:String] "Not implemented"

	public function resize[Function:(len : Int) -> Void]
		[Arg:Int] [Local len(851):Int]
		[Block:Unknown<40>]
			[Throw:Unknown<40>]
				[Call:Any]
					[Field:(value : Any) -> Any]
						[TypeExpr haxe.Exception:{ Statics haxe.Exception }]
						[FStatic:(value : Any) -> Any]
							haxe.Exception
							thrown:(value : Any) -> Any
					[Const:String] "Not implemented"

	public function toString[Function:() -> String]
		[Block:Unknown<41>]
			[Throw:Unknown<41>]
				[Call:Any]
					[Field:(value : Any) -> Any]
						[TypeExpr haxe.Exception:{ Statics haxe.Exception }]
						[FStatic:(value : Any) -> Any]
							haxe.Exception
							thrown:(value : Any) -> Any
					[Const:String] "Not implemented"

	function __cast[Function:(t : hl.Type) -> Dynamic]
		[Arg:hl.Type] [Local t(1905):hl.Type]
		[Block:Dynamic]
			[Var v(1908):hl.types.ArrayDyn] [Const:hl.types.ArrayDyn] null
			[If:Void]
				[Parenthesis:Bool]
					[Binop:Bool]
						[Local t(1905):hl.Type:hl.Type]
						==
						[Call:hl.Type]
							[Ident:hl.types.ArrayDyn -> Unknown<6>] $ttype
							[Local v(1908):hl.types.ArrayDyn:hl.types.ArrayDyn]
				[Then:Dynamic] [Return:Dynamic]
					[Call:hl.types.ArrayDyn]
						[Field:(a : hl.types.ArrayBase, ?allowReinterpret : Bool) -> hl.types.ArrayDyn]
							[TypeExpr hl.types.ArrayDyn:Class<hl.types.ArrayDyn>]
							[FStatic:(a : hl.types.ArrayBase, ?allowReinterpret : Bool) -> hl.types.ArrayDyn]
								hl.types.ArrayDyn
								alloc:(a : hl.types.ArrayBase, ?allowReinterpret : Bool) -> hl.types.ArrayDyn
						[Const:hl.types.ArrayBase] this
						[Const:Bool] false
			[Return:Dynamic] [Const:Unknown<42>] null

	function isArrayObj[Function:() -> Bool] [Block:Dynamic] [Return:Dynamic] [Const:Bool] false

	@:has_untyped
	public static function allocI32[Function:(bytes : hl.BytesAccess<Int>, length : Int) -> hl.types.ArrayI32]
		[Arg:hl.BytesAccess<Int>] [Local bytes(1909):hl.BytesAccess<Int>]
		[Arg:Int] [Local length(1910):Int]
		[Block:Dynamic]
			[Var a(1911):hl.types.ArrayI32]
				[Call:hl.types.ArrayI32]
					[Ident:Class<hl.types.ArrayBytes_Int> -> Unknown<43>] $new
					[TypeExpr hl.types.ArrayBytes_Int:Class<hl.types.ArrayBytes_Int>]
			[Binop:Int]
				[Field:Int]
					[Local a(1911):hl.types.ArrayI32:hl.types.ArrayI32]
					[FInstance:Int]
						hl.types.ArrayBase
						length:Int
				=
				[Local length(1910):Int:Int]
			[Binop:hl.BytesAccess<Int>]
				[Field:hl.BytesAccess<Int>]
					[Local a(1911):hl.types.ArrayI32:hl.types.ArrayI32]
					[FInstance:hl.BytesAccess<Int>]
						hl.types.ArrayBytes_Int
						bytes:hl.BytesAccess<Int>
				=
				[Local bytes(1909):hl.BytesAccess<Int>:hl.BytesAccess<Int>]
			[Binop:Int]
				[Field:Int]
					[Local a(1911):hl.types.ArrayI32:hl.types.ArrayI32]
					[FInstance:Int]
						hl.types.ArrayBytes_Int
						size:Int
				=
				[Local length(1910):Int:Int]
			[Return:Dynamic] [Local a(1911):hl.types.ArrayI32:hl.types.ArrayI32]

	@:has_untyped
	public static function allocUI16[Function:(bytes : hl.BytesAccess<hl.UI16>, length : Int) -> hl.types.ArrayUI16]
		[Arg:hl.BytesAccess<hl.UI16>] [Local bytes(2218):hl.BytesAccess<hl.UI16>]
		[Arg:Int] [Local length(2219):Int]
		[Block:Dynamic]
			[Var a(2220):hl.types.ArrayUI16]
				[Call:hl.types.ArrayUI16]
					[Ident:Class<hl.types.ArrayBytes_hl_UI16> -> Unknown<44>] $new
					[TypeExpr hl.types.ArrayBytes_hl_UI16:Class<hl.types.ArrayBytes_hl_UI16>]
			[Binop:Int]
				[Field:Int]
					[Local a(2220):hl.types.ArrayUI16:hl.types.ArrayUI16]
					[FInstance:Int]
						hl.types.ArrayBase
						length:Int
				=
				[Local length(2219):Int:Int]
			[Binop:hl.BytesAccess<hl.UI16>]
				[Field:hl.BytesAccess<hl.UI16>]
					[Local a(2220):hl.types.ArrayUI16:hl.types.ArrayUI16]
					[FInstance:hl.BytesAccess<hl.UI16>]
						hl.types.ArrayBytes_hl_UI16
						bytes:hl.BytesAccess<hl.UI16>
				=
				[Local bytes(2218):hl.BytesAccess<hl.UI16>:hl.BytesAccess<hl.UI16>]
			[Binop:Int]
				[Field:Int]
					[Local a(2220):hl.types.ArrayUI16:hl.types.ArrayUI16]
					[FInstance:Int]
						hl.types.ArrayBytes_hl_UI16
						size:Int
				=
				[Local length(2219):Int:Int]
			[Return:Dynamic] [Local a(2220):hl.types.ArrayUI16:hl.types.ArrayUI16]

	@:has_untyped
	public static function allocF32[Function:(bytes : hl.BytesAccess<hl.F32>, length : Int) -> hl.types.ArrayF32]
		[Arg:hl.BytesAccess<hl.F32>] [Local bytes(2221):hl.BytesAccess<hl.F32>]
		[Arg:Int] [Local length(2222):Int]
		[Block:Dynamic]
			[Var a(2223):hl.types.ArrayF32]
				[Call:hl.types.ArrayF32]
					[Ident:Class<hl.types.ArrayBytes_hl_F32> -> Unknown<45>] $new
					[TypeExpr hl.types.ArrayBytes_hl_F32:Class<hl.types.ArrayBytes_hl_F32>]
			[Binop:Int]
				[Field:Int]
					[Local a(2223):hl.types.ArrayF32:hl.types.ArrayF32]
					[FInstance:Int]
						hl.types.ArrayBase
						length:Int
				=
				[Local length(2222):Int:Int]
			[Binop:hl.BytesAccess<hl.F32>]
				[Field:hl.BytesAccess<hl.F32>]
					[Local a(2223):hl.types.ArrayF32:hl.types.ArrayF32]
					[FInstance:hl.BytesAccess<hl.F32>]
						hl.types.ArrayBytes_hl_F32
						bytes:hl.BytesAccess<hl.F32>
				=
				[Local bytes(2221):hl.BytesAccess<hl.F32>:hl.BytesAccess<hl.F32>]
			[Binop:Int]
				[Field:Int]
					[Local a(2223):hl.types.ArrayF32:hl.types.ArrayF32]
					[FInstance:Int]
						hl.types.ArrayBytes_hl_F32
						size:Int
				=
				[Local length(2222):Int:Int]
			[Return:Dynamic] [Local a(2223):hl.types.ArrayF32:hl.types.ArrayF32]

	@:has_untyped
	public static function allocF64[Function:(bytes : hl.BytesAccess<Float>, length : Int) -> hl.types.ArrayF64]
		[Arg:hl.BytesAccess<Float>] [Local bytes(2224):hl.BytesAccess<Float>]
		[Arg:Int] [Local length(2225):Int]
		[Block:Dynamic]
			[Var a(2226):hl.types.ArrayF64]
				[Call:hl.types.ArrayF64]
					[Ident:Class<hl.types.ArrayBytes_Float> -> Unknown<46>] $new
					[TypeExpr hl.types.ArrayBytes_Float:Class<hl.types.ArrayBytes_Float>]
			[Binop:Int]
				[Field:Int]
					[Local a(2226):hl.types.ArrayF64:hl.types.ArrayF64]
					[FInstance:Int]
						hl.types.ArrayBase
						length:Int
				=
				[Local length(2225):Int:Int]
			[Binop:hl.BytesAccess<Float>]
				[Field:hl.BytesAccess<Float>]
					[Local a(2226):hl.types.ArrayF64:hl.types.ArrayF64]
					[FInstance:hl.BytesAccess<Float>]
						hl.types.ArrayBytes_Float
						bytes:hl.BytesAccess<Float>
				=
				[Local bytes(2224):hl.BytesAccess<Float>:hl.BytesAccess<Float>]
			[Binop:Int]
				[Field:Int]
					[Local a(2226):hl.types.ArrayF64:hl.types.ArrayF64]
					[FInstance:Int]
						hl.types.ArrayBytes_Float
						size:Int
				=
				[Local length(2225):Int:Int]
			[Return:Dynamic] [Local a(2226):hl.types.ArrayF64:hl.types.ArrayF64]
}